#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
Insert aggregated SCADA weather data generated by aggregateSCADAWeatherData.py.

Usage:

    python insertAggregatedSCADAWeatherData.py --filename ${FILENAME}

"""

__author__ = 'Daniel Zhang (張道博)'
__copyright__ = 'Copyright (c) 2013, University of Hawaii Smart Energy Project'
__license__ = 'https://raw.github' \
              '.com/Hawaii-Smart-Energy-Project/Maui-Smart-Grid/master/BSD' \
              '-LICENSE.txt'

from msg_db_connector import MSGDBConnector
from msg_db_util import MSGDBUtil
import csv
import argparse

commandLineArgs = None

def processCommandLineArguments():
    """
    Create command line arguments and parse them.
    """

    global parser, commandLineArgs
    parser = argparse.ArgumentParser(description = '')
    parser.add_argument('--filename', type = str)
    commandLineArgs = parser.parse_args()

if __name__ == '__main__':

    processCommandLineArguments()
    connector = MSGDBConnector()
    conn = connector.connectDB()
    dbUtil = MSGDBUtil()
    cursor = conn.cursor()

    table = 'AverageFifteenMinKiheiSCADATemperatureHumidity'
    cols = ['timestamp', 'met_air_temp_degf', 'met_rel_humid_pct']

    cnt = 0

    # @todo Test existence of file.

    with open(commandLineArgs.filename, 'rb') as csvfile:
        myReader = csv.reader(csvfile, delimiter = ',')
        for row in myReader:
            sql = """INSERT INTO "%s" (%s) VALUES (%s)""" % (
                table, ','.join(cols),
                ','.join("'" + item.strip() + "'" for item in row))

            sql = sql.replace("'NULL'", 'NULL')

            dbUtil.executeSQL(cursor, sql)

            cnt += 1
            if cnt % 10000 == 0:
                conn.commit()

    conn.commit()
    cnt = 0
